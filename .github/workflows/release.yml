name: Release

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force release even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases and push tags
      id-token: write # Needed for npm provenance
      issues: write   # Needed to comment on released issues
      pull-requests: write # Needed to comment on released PRs
      packages: write # Needed for npm publishing
      actions: read   # Needed for semantic-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for semantic-release
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check trigger type
        run: |
          echo "üîç Release trigger analysis:"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          echo "Commit SHA: ${{ github.sha }}"
          
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "‚úÖ Triggered by direct push to ${{ github.ref_name }}"
            echo "Commit message: $(git log --format=%B -n 1 HEAD)"
            echo "Author: $(git log --format='%an <%ae>' -n 1 HEAD)"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "‚úÖ Triggered by manual workflow dispatch"
            echo "Force release: ${{ github.event.inputs.force_release }}"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Verify CLI installation
        run: |
          npm link
          clockify-auto --version
          clockify-auto --help

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: semantic-release-bot
          GIT_AUTHOR_EMAIL: semantic-release-bot@martynus.net
          GIT_COMMITTER_NAME: semantic-release-bot
          GIT_COMMITTER_EMAIL: semantic-release-bot@martynus.net
        run: |
          echo "üöÄ Running semantic-release with automatic Git tagging..."
          echo "Supports: Direct pushes to main, PR merges, and manual triggers"
          
          if [ "${{ github.event.inputs.force_release }}" == "true" ]; then
            echo "‚ö†Ô∏è  Force release enabled - will attempt release even without releasable commits"
            # Force a patch release if needed
            git commit --allow-empty -m "chore: force release"
          fi
          
          npx semantic-release

      - name: Verify release artifacts
        if: success()
        run: |
          echo "üîç Checking for created tags..."
          git tag --list --sort=-version:refname | head -5
          echo
          echo "üìù Latest commit:"
          git log --oneline -1
          echo
          echo "üì¶ Current version in package.json:"
          node -e "console.log('v' + require('./package.json').version)"
          echo
          echo "üéØ Release verification complete!"
          echo "‚úÖ Direct push to main successfully processed"
          echo "‚úÖ Automatic tagging and release system working"

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Release workflow failed!"
          echo "This could happen if:"
          echo "- No releasable commits found (not an error)"
          echo "- Network issues with npm or GitHub"
          echo "- Authentication problems"
          echo "- Semantic-release configuration issues"
          echo
          echo "Check the logs above for specific error details."