name: Semantic Release (Dry Run)

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop

jobs:
  dry-run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for semantic-release
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Run semantic-release dry run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release --dry-run

      - name: Comment dry-run results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // This is a simplified comment - in a real scenario you'd parse semantic-release output
            const comment = `## ðŸš€ Semantic Release Dry Run Results
            
            This PR has been analyzed for potential releases:
            
            - **Commit Analysis**: âœ… Commits have been analyzed for conventional format
            - **Release Notes**: âœ… Release notes would be generated
            - **Version Bump**: Based on conventional commits in this PR
            - **NPM Publish**: Would publish to npm registry (dry-run only)
            - **GitHub Release**: Would create GitHub release (dry-run only)
            
            > This is a dry-run. No actual release will be made from this PR.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });